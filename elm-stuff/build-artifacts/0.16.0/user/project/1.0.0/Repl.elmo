Elm.Repl = Elm.Repl || {};
Elm.Repl.make = function (_elm) {
   "use strict";
   _elm.Repl = _elm.Repl || {};
   if (_elm.Repl.values) return _elm.Repl.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var tsol = {ctor: "_Tuple0"};
   var string2 = "aaaaa";
   var string1 = "aaaab";
   var deltron3030 = A2($List.map,$List.map(F2(function (x,y) {    return _U.eq(x,y);})),_U.list([_U.list(["a","b"]),_U.list(["a","a"])]));
   var car = A2($List.map,F2(function (x,y) {    return _U.eq(x,y);}),_U.list(["a","b"]));
   return _elm.Repl.values = {_op: _op,car: car,deltron3030: deltron3030,string1: string1,string2: string2,tsol: tsol};
};